// <auto-generated />
using System;
using E_mart.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_mart.Migrations
{
    [DbContext(typeof(eMartDbContext))]
    partial class eMartDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("E_mart.Models.Cart", b =>
                {
                    b.Property<int>("Cartid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cartid");

                    b.Property<DateTime?>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("Productid")
                        .HasColumnType("int")
                        .HasColumnName("productid");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Cartid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Userid" }, "FK7omdju5h5l95oek80ymvb56uq");

                    b.HasIndex(new[] { "Productid" }, "FKf02ibgv71d0qx173h41rsjeri");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("E_mart.Models.Cartitem", b =>
                {
                    b.Property<int>("Cartitemid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cartitemid");

                    b.Property<DateTime?>("AddedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("added_at");

                    b.Property<int>("Cartid")
                        .HasColumnType("int")
                        .HasColumnName("cartid");

                    b.Property<int>("Productid")
                        .HasColumnType("int")
                        .HasColumnName("productid");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Cartitemid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Cartid" }, "FK5vi0udj5ia7o0h6k6r0op1do6");

                    b.HasIndex(new[] { "Productid" }, "FKp74gufw7pdc246iolcggngpp");

                    b.ToTable("cartitems");
                });

            modelBuilder.Entity("E_mart.Models.Category", b =>
                {
                    b.Property<int>("Categoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<string>("CategoryDescription")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category_description");

                    b.Property<string>("Categoryimage")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("categoryimage");

                    b.Property<string>("Categoryname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("categoryname");

                    b.Property<DateTime?>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Categoryid")
                        .HasName("PRIMARY");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("E_mart.Models.Order", b =>
                {
                    b.Property<int>("Orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderid");

                    b.Property<double>("Amount")
                        .HasColumnType("double")
                        .HasColumnName("amount");

                    b.Property<int>("Cartid")
                        .HasColumnType("int")
                        .HasColumnName("cartid");

                    b.Property<DateTime?>("OrderDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("order_date");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("enum('COD','CREDIT_CARD','PAYPAL')")
                        .HasColumnName("payment_method");

                    b.Property<string>("Status")
                        .HasColumnType("enum('CANCELLED','DELIVERED','PENDING','PROCESSING','SHIPPED')")
                        .HasColumnName("status");

                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Orderid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Cartid" }, "FKhwdcdaiq23cketwygk74e29c4");

                    b.HasIndex(new[] { "Userid" }, "FKpnm1eeupqm4tykds7k3okqegv");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("E_mart.Models.PaymentDetail", b =>
                {
                    b.Property<int>("Paymentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("paymentid");

                    b.Property<int>("Orderid")
                        .HasColumnType("int")
                        .HasColumnName("orderid");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("payment_method");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("payment_status");

                    b.HasKey("Paymentid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Orderid" }, "FKdfd34sf5c5xu3ralj3r11u3ih");

                    b.ToTable("payment_details");
                });

            modelBuilder.Entity("E_mart.Models.Product", b =>
                {
                    b.Property<int>("Productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productid");

                    b.Property<string>("Brand")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("brand");

                    b.Property<int>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<DateTime?>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionEn")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description_en");

                    b.Property<string>("DescriptionFr")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description_fr");

                    b.Property<double>("Discount")
                        .HasColumnType("double")
                        .HasColumnName("discount");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<ulong>("Isdeal")
                        .HasColumnType("bit(1)")
                        .HasColumnName("isdeal");

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnName("price");

                    b.Property<string>("Productname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("productname");

                    b.Property<string>("ProductnameEn")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("productname_en");

                    b.Property<string>("ProductnameFr")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("productname_fr");

                    b.Property<double>("Rating")
                        .HasColumnType("double")
                        .HasColumnName("rating");

                    b.Property<int>("Stocks")
                        .HasColumnType("int")
                        .HasColumnName("stocks");

                    b.Property<int?>("Subcategoryid")
                        .HasColumnType("int")
                        .HasColumnName("subcategoryid");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Productid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Categoryid" }, "FK1krrsjgcawsfg8k8u4hm5gi8q");

                    b.HasIndex(new[] { "Subcategoryid" }, "FKi5prgvmxtqxb5fji9wc2qivr2");

                    b.ToTable("products");
                });

            modelBuilder.Entity("E_mart.Models.Subcategory", b =>
                {
                    b.Property<int>("Subcategoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subcategoryid");

                    b.Property<int>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<string>("Subcategoryimage")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("subcategoryimage");

                    b.Property<string>("Subcategoryname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("subcategoryname");

                    b.HasKey("Subcategoryid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Categoryid" }, "FK5cs3pf1w7kktveo6g9o25ita6");

                    b.ToTable("subcategories");
                });

            modelBuilder.Entity("E_mart.Models.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.Property<DateTime?>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<ulong>("IsLoyalty")
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_loyalty");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phonenumber");

                    b.Property<int>("Supercoin")
                        .HasColumnType("int")
                        .HasColumnName("supercoin");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Userid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "UK6dotkott2kjsp8vw4d0m25fb7")
                        .IsUnique();

                    b.HasIndex(new[] { "Phonenumber" }, "UK70jmct5ej765l57mlcrdhxn1c")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("E_mart.Models.Cart", b =>
                {
                    b.HasOne("E_mart.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("Productid")
                        .IsRequired()
                        .HasConstraintName("FKf02ibgv71d0qx173h41rsjeri");

                    b.HasOne("E_mart.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("Userid")
                        .IsRequired()
                        .HasConstraintName("FK7omdju5h5l95oek80ymvb56uq");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_mart.Models.Cartitem", b =>
                {
                    b.HasOne("E_mart.Models.Cart", "Cart")
                        .WithMany("Cartitems")
                        .HasForeignKey("Cartid")
                        .IsRequired()
                        .HasConstraintName("FK5vi0udj5ia7o0h6k6r0op1do6");

                    b.HasOne("E_mart.Models.Product", "Product")
                        .WithMany("Cartitems")
                        .HasForeignKey("Productid")
                        .IsRequired()
                        .HasConstraintName("FKp74gufw7pdc246iolcggngpp");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_mart.Models.Order", b =>
                {
                    b.HasOne("E_mart.Models.Cart", "Cart")
                        .WithMany("Orders")
                        .HasForeignKey("Cartid")
                        .IsRequired()
                        .HasConstraintName("FKhwdcdaiq23cketwygk74e29c4");

                    b.HasOne("E_mart.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("Userid")
                        .IsRequired()
                        .HasConstraintName("FKpnm1eeupqm4tykds7k3okqegv");

                    b.Navigation("Cart");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_mart.Models.PaymentDetail", b =>
                {
                    b.HasOne("E_mart.Models.Order", "Order")
                        .WithMany("PaymentDetails")
                        .HasForeignKey("Orderid")
                        .IsRequired()
                        .HasConstraintName("FKdfd34sf5c5xu3ralj3r11u3ih");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("E_mart.Models.Product", b =>
                {
                    b.HasOne("E_mart.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Categoryid")
                        .IsRequired()
                        .HasConstraintName("FK1krrsjgcawsfg8k8u4hm5gi8q");

                    b.HasOne("E_mart.Models.Subcategory", "Subcategory")
                        .WithMany("Products")
                        .HasForeignKey("Subcategoryid")
                        .HasConstraintName("FKi5prgvmxtqxb5fji9wc2qivr2");

                    b.Navigation("Category");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("E_mart.Models.Subcategory", b =>
                {
                    b.HasOne("E_mart.Models.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("Categoryid")
                        .IsRequired()
                        .HasConstraintName("FK5cs3pf1w7kktveo6g9o25ita6");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_mart.Models.Cart", b =>
                {
                    b.Navigation("Cartitems");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("E_mart.Models.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("E_mart.Models.Order", b =>
                {
                    b.Navigation("PaymentDetails");
                });

            modelBuilder.Entity("E_mart.Models.Product", b =>
                {
                    b.Navigation("Cartitems");

                    b.Navigation("Carts");
                });

            modelBuilder.Entity("E_mart.Models.Subcategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("E_mart.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
